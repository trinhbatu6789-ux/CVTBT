/**
 * COMMITLINT CONFIGURATION - C·∫§U H√åNH COMMITLINT
 * 
 * Quy t·∫Øc commit message theo Conventional Commits
 * Format: <type>(<scope>): <description>
 * 
 * Types:
 * - feat: T√≠nh nƒÉng m·ªõi
 * - fix: S·ª≠a l·ªói
 * - docs: C·∫≠p nh·∫≠t t√†i li·ªáu
 * - style: Thay ƒë·ªïi formatting, kh√¥ng ·∫£nh h∆∞·ªüng logic
 * - refactor: Refactor code
 * - test: Th√™m/s·ª≠a tests
 * - chore: C·∫≠p nh·∫≠t build tools, dependencies
 */

export default {
  extends: ['@commitlint/config-conventional'],
  
  rules: {
    // TYPE RULES - QUY T·∫ÆC LO·∫†I COMMIT
    'type-enum': [
      2,
      'always',
      [
        'feat',     // ‚ú® T√≠nh nƒÉng m·ªõi
        'fix',      // üêõ S·ª≠a l·ªói
        'docs',     // üìö C·∫≠p nh·∫≠t t√†i li·ªáu
        'style',    // üíÑ Thay ƒë·ªïi formatting
        'refactor', // ‚ôªÔ∏è Refactor code
        'test',     // ‚úÖ Th√™m/s·ª≠a tests
        'chore',    // üîß C·∫≠p nh·∫≠t build tools
        'perf',     // ‚ö° C·∫£i thi·ªán performance
        'ci',       // üë∑ C·∫≠p nh·∫≠t CI/CD
        'build',    // üì¶ C·∫≠p nh·∫≠t build system
        'revert',   // ‚è™ Revert commit
      ]
    ],
    
    // CASE RULES - QUY T·∫ÆC CH·ªÆ HOA/TH∆Ø·ªúNG
    'type-case': [2, 'always', 'lower-case'],
    'scope-case': [2, 'always', 'lower-case'],
    'subject-case': [2, 'always', 'lower-case'],
    
    // LENGTH RULES - QUY T·∫ÆC ƒê·ªò D√ÄI
    'type-max-length': [2, 'always', 10],
    'scope-max-length': [2, 'always', 20],
    'subject-max-length': [2, 'always', 50],
    'subject-min-length': [2, 'always', 10],
    
    // FORMAT RULES - QUY T·∫ÆC FORMAT
    'type-empty': [2, 'never'],
    'subject-empty': [2, 'never'],
    'subject-full-stop': [2, 'never', '.'],
    
    // SCOPE RULES - QUY T·∫ÆC SCOPE
    'scope-enum': [
      2,
      'always',
      [
        'ui',           // Giao di·ªán ng∆∞·ªùi d√πng
        'ux',           // Tr·∫£i nghi·ªám ng∆∞·ªùi d√πng
        'css',          // Styling CSS
        'component',    // React components
        'layout',       // Layout structure
        'config',       // Configuration files
        'deps',         // Dependencies
        'build',        // Build process
        'docs',         // Documentation
        'refactor',     // Code refactoring
        'style',        // Code style
        'test',         // Testing
      ]
    ],
    
    // BODY RULES - QUY T·∫ÆC N·ªòI DUNG
    'body-max-line-length': [2, 'always', 72],
    'footer-max-line-length': [2, 'always', 72],
    
    // CUSTOM RULES - QUY T·∫ÆC T√ôY CH·ªàNH
    'subject-exclamation-mark': [2, 'never'],
    'header-max-length': [2, 'always', 100],
  },
  
  // VIETNAMESE EXAMPLES - V√ç D·ª§ TI·∫æNG VI·ªÜT
  helpUrl: `
    üìù C√ÅCH VI·∫æT COMMIT MESSAGE CHU·∫®N:
    
    ‚úÖ ƒê√öNG:
    feat(ui): th√™m dark mode cho cv
    fix(css): s·ª≠a l·ªói responsive tr√™n mobile
    docs(readme): c·∫≠p nh·∫≠t h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t
    refactor(component): t√°ch component th√†nh modules nh·ªè
    style(code): format code theo eslint rules
    
    ‚ùå SAI:
    "s·ª≠a l·ªói" (thi·∫øu type)
    "feat: add dark mode" (kh√¥ng c√≥ scope)
    "fix: bug" (qu√° ng·∫Øn)
    "feat(UI): Add Dark Mode Feature!!!" (vi·∫øt hoa, c√≥ d·∫•u ch·∫•m than)
    
    üéØ FORMAT: <type>(<scope>): <description>
    - type: lo·∫°i thay ƒë·ªïi (feat, fix, docs, style, refactor, test, chore)
    - scope: ph·∫°m vi thay ƒë·ªïi (ui, css, component, config, etc.)
    - description: m√¥ t·∫£ ng·∫Øn g·ªçn b·∫±ng ti·∫øng Vi·ªát
  `,
};
