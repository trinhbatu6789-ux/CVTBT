# ========================================
# GITHUB ACTIONS DEPLOY WORKFLOW
# ========================================
# 
# Workflow chuyên biệt cho deployment:
# - Deploy lên GitHub Pages
# - Deploy lên Vercel (tùy chọn)
# - Chạy khi có tag release
#
# Triggers:
# - push: main branch
# - release: published
# - workflow_dispatch: manual

name: 🚀 Deploy CV

on:
  # DEPLOY TRIGGERS - KÍCH HOẠT DEPLOY
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.js'
  
  release:
    types: [ published ]
  
  # MANUAL DEPLOY - DEPLOY THỦ CÔNG
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: true
        default: 'github-pages'
        type: choice
        options:
          - github-pages
          - vercel
          - netlify

# ENVIRONMENT - MÔI TRƯỜNG
env:
  NODE_VERSION: '18'
  BUILD_COMMAND: 'npm run build'
  OUTPUT_DIR: 'dist'

jobs:
  # JOB 1: DEPLOY TO GITHUB PAGES
  deploy-github-pages:
    name: 🌐 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: 📦 Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci
      
      - name: 🏗️ Build project
        run: |
          echo "🏗️ Building CV project..."
          npm run build
          
          # Verify build output
          echo "📊 Build verification:"
          ls -la ${{ env.OUTPUT_DIR }}/
          echo "📏 Build size:"
          du -sh ${{ env.OUTPUT_DIR }}/
      
      - name: 🔧 Setup GitHub Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: vite
      
      - name: 📤 Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUTPUT_DIR }}/
      
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: 📢 Deployment success
        run: |
          echo "🎉 CV deployed successfully!"
          echo "🌐 Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📅 Deployed at: $(date)"

  # JOB 2: DEPLOY TO VERCEL (OPTIONAL)
  deploy-vercel:
    name: ⚡ Deploy to Vercel
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'vercel' || github.event_name == 'release'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build project
        run: npm run build
      
      - name: ⚡ Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
      
      - name: 📢 Vercel deployment success
        run: |
          echo "🎉 CV deployed to Vercel!"
          echo "⚡ Vercel provides automatic deployments"

  # JOB 3: CREATE RELEASE (nếu có tag)
  create-release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build project
        run: npm run build
      
      - name: 📦 Create release archive
        run: |
          echo "📦 Creating release archive..."
          tar -czf cv-release-${{ github.event.release.tag_name }}.tar.gz ${{ env.OUTPUT_DIR }}/
          ls -la cv-release-*.tar.gz
      
      - name: 📋 Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cv-release-${{ github.event.release.tag_name }}.tar.gz
          asset_name: cv-release-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
      
      - name: 📢 Release created
        run: |
          echo "🎉 Release ${{ github.event.release.tag_name }} created!"
          echo "📦 Archive uploaded: cv-release-${{ github.event.release.tag_name }}.tar.gz"

  # JOB 4: DEPLOYMENT SUMMARY
  deployment-summary:
    name: 📊 Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-github-pages, deploy-vercel, create-release]
    if: always()
    
    steps:
      - name: 📊 Deployment Summary
        run: |
          echo "📊 DEPLOYMENT SUMMARY"
          echo "===================="
          echo "🎯 Repository: ${{ github.repository }}"
          echo "🏷️ Branch/Tag: ${{ github.ref_name }}"
          echo "📅 Timestamp: $(date)"
          echo "===================="
          echo "🌐 GitHub Pages: ${{ needs.deploy-github-pages.result }}"
          echo "⚡ Vercel: ${{ needs.deploy-vercel.result }}"
          echo "🏷️ Release: ${{ needs.create-release.result }}"
          echo "===================="
          
          if [[ "${{ needs.deploy-github-pages.result }}" == "success" ]]; then
            echo "✅ CV is live on GitHub Pages!"
            echo "🔗 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          fi
          
          if [[ "${{ needs.deploy-vercel.result }}" == "success" ]]; then
            echo "✅ CV is live on Vercel!"
          fi
          
          if [[ "${{ needs.create-release.result }}" == "success" ]]; then
            echo "✅ Release ${{ github.event.release.tag_name }} created!"
          fi
