# ========================================
# GITHUB ACTIONS CI/CD WORKFLOW
# ========================================
# 
# Workflow tự động:
# - Build và test dự án CV
# - Deploy lên GitHub Pages
# - Chạy trên mọi push và pull request
#
# Triggers:
# - push: main branch
# - pull_request: any branch
# - workflow_dispatch: manual trigger

name: 🚀 CI/CD Pipeline

on:
  # TRIGGERS - KÍCH HOẠT WORKFLOW
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.js'
      - '.github/workflows/**'
  
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.js'
      - '.github/workflows/**'
  
  # MANUAL TRIGGER - KÍCH HOẠT THỦ CÔNG
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

# ENVIRONMENT - MÔI TRƯỜNG
env:
  NODE_VERSION: '18'
  CACHE_VERSION: 'v1'

jobs:
  # JOB 1: CODE QUALITY - KIỂM TRA CHẤT LƯỢNG CODE
  quality-check:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: 📦 Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci
      
      - name: 🔍 ESLint check
        run: |
          echo "🔍 Running ESLint..."
          npm run lint:check
      
      - name: 💄 Prettier check
        run: |
          echo "💄 Running Prettier check..."
          npm run format:check
      
      - name: 📊 Quality report
        run: |
          echo "📊 Running quality checks..."
          npm run quality
      
      - name: 📋 Upload quality results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: quality-results
          path: |
            .eslintcache
            coverage/
          retention-days: 7

  # JOB 2: BUILD - BUILD DỰ ÁN
  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: 📦 Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci
      
      - name: 🏗️ Build project
        run: |
          echo "🏗️ Building project..."
          npm run build
      
      - name: 📊 Build size analysis
        run: |
          echo "📊 Analyzing build size..."
          ls -la dist/
          du -sh dist/
      
      - name: 📋 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 30

  # JOB 3: TEST - CHẠY TESTS (nếu có)
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: quality-check
    if: always()
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🧪 Run tests
        run: |
          echo "🧪 Running tests..."
          if npm run test 2>/dev/null; then
            echo "✅ Tests passed"
          else
            echo "⚠️ No tests found or tests failed"
            echo "This is expected for a CV project"
          fi

  # JOB 4: DEPLOY - DEPLOY LÊN GITHUB PAGES
  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [quality-check, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # PERMISSIONS - QUYỀN TRUY CẬP
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build for production
        run: |
          echo "🏗️ Building for production..."
          npm run build
      
      - name: 📋 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
      
      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v4
      
      - name: 📤 Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
      
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # JOB 5: NOTIFICATION - THÔNG BÁO KẾT QUẢ
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [quality-check, build, test, deploy]
    if: always()
    
    steps:
      - name: 📢 Build notification
        run: |
          echo "📢 CI/CD Pipeline Results:"
          echo "=========================="
          echo "✅ Quality Check: ${{ needs.quality-check.result }}"
          echo "✅ Build: ${{ needs.build.result }}"
          echo "✅ Test: ${{ needs.test.result }}"
          echo "✅ Deploy: ${{ needs.deploy.result }}"
          echo "=========================="
          
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "🎉 Deployment successful!"
            echo "🌐 CV is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          elif [[ "${{ needs.quality-check.result }}" == "failure" || "${{ needs.build.result }}" == "failure" ]]; then
            echo "❌ Pipeline failed - please check the logs"
          else
            echo "⚠️ Pipeline completed with warnings"
          fi
